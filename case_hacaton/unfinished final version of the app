import flet as ft
import sqlite3
import sys

def main(page: ft.Page):
    open("file1.txt", "a").close()
    open("file2.txt", "a").close()
    global name
    global ruw
    global rew
    rew=""
    ruw=0
    r=0
    name=""

    with open("file2.txt") as f:
        lines = f.readlines()
    for row in lines:
        ruw = int(row)

    if ruw!=0:
        pass
    else:
        with open("file1.txt", "a") as file:
            file.write(f"{r}" + "\n")

        with open("file2.txt", "a") as file:
            file.write(f"{r}" + "\n")

    db = sqlite3.connect('Dogs.data')
    cur = db.cursor()
    cur.execute("""CREATE TABLE IF NOT EXISTS doges ( 
        name TEXT PRIMARY KEY, 
        age INTEGER, paroda TEXT, 
        pol TEXT, pis TEXT, 
        foto TEXT)""")
    db.close()

    db = sqlite3.connect('Feed_donat.data')
    cur = db.cursor()
    cur.execute("""CREATE TABLE IF NOT EXISTS f_doges (money INTEGER PRIMARY KEY)""")
    db.close()

    db = sqlite3.connect('Med_donat.data')
    cur = db.cursor()
    cur.execute("""CREATE TABLE IF NOT EXISTS m_doges (money INTEGER PRIMARY KEY)""")
    db.close()

    db = sqlite3.connect('Walk_Dogs.data')
    cur = db.cursor()
    cur.execute("""CREATE TABLE IF NOT EXISTS w_doges (name TEXT PRIMARY KEY)""")
    db.close()

    db = sqlite3.connect('Adopt_Dogs.data')
    cur = db.cursor()
    cur.execute("""CREATE TABLE IF NOT EXISTS a_doges (name TEXT PRIMARY KEY)""")
    db.close()

    db = sqlite3.connect('Guardianship_Dogs.data')
    cur = db.cursor()
    cur.execute("""CREATE TABLE IF NOT EXISTS g_doges (name TEXT PRIMARY KEY)""")
    db.close()

    db = sqlite3.connect('Walking_m_Dogs.data')
    cur = db.cursor()
    cur.execute("""CREATE TABLE IF NOT EXISTS w_m_doges (name TEXT PRIMARY KEY, owner TEXT)""")
    db.close()

    db = sqlite3.connect('Adopting_m_Dogs.data')
    cur = db.cursor()
    cur.execute("""CREATE TABLE IF NOT EXISTS a_m_doges (name TEXT PRIMARY KEY, owner TEXT)""")
    db.close()

    db = sqlite3.connect('Guardianshiping_m_Dogs.data')
    cur = db.cursor()
    cur.execute("""CREATE TABLE IF NOT EXISTS g_m_doges (name TEXT PRIMARY KEY, owner TEXT)""")
    db.close()

    page.scroll = "always"
    page.title="SERVICE FOR HELP FOR DOGS FROM SHELTERS"
    page.theme_mode = "dark"
    page.window_width=520
    page.window_height = 1000
    page.window_resizable=False
    page.update()
    global money1
    global money2
    global dog_pol
    global names
    global chek
    chek = ""
    names = ""
    dog_pol=""
    money1 = 0
    money2 = 0

    page.vertical_alignment = ft.MainAxisAlignment.CENTER
    page.horizontal_alignment = ft.CrossAxisAlignment.CENTER
    e=1

    class User:
        def lich_kab_open(self):
            Glav_page.del1(1)
            acc_info.visible=True
            backes.visible=True
            page.update()
            pass

        def lich_kab_info(self):
            rew=""
            nick_name_="Ник: "
            name_="Имя: "
            sec_name_ = "Фамилия: "
            age_ = "Возраст: "
            pass_ = "Пароль: "
            name = txt_check_nickname.value
            db = sqlite3.connect('Users_file.Data')
            cur = db.cursor()
            cur.execute(f"SELECT nickname,name,second_name,age,password FROM users")
            for row in cur.fetchall():
                if str(row[0]) == name:
                    rew = f"{rew + nick_name_ +str(row[0])}\n" + f"{name_+str(row[1])}\n" + f"{sec_name_+str(row[2])}\n" + f"{age_+str(row[3])}\n" + f"{pass_+str(row[4])}\n"
                    acc_info.value = rew
                    print(rew)
                else:
                    pass
        def registration_new_user(self):
            db = sqlite3.connect('Users_file.Data')
            cur = db.cursor()
            cur.execute("""CREATE TABLE IF NOT EXISTS users (
                       nickname TEXT PRIMARY KEY,
                       name TEXT,
                       second_name TEXT,
                       city TEXT,
                       age INTEGER,
                       password INTEGER
                   )""")
            cur.execute(
                f"INSERT INTO users VALUES('{txt_nickname.value}', '{txt_name.value}', '{txt_second_name.value}', '{txt_city.value}', '{txt_age.value}', '{int(txt_pasword.value)}')")
            db.commit()
            db.close()

        def entry_user1(self):
            chek=""
            admin = "Ilay"
            admin_pasword = "1111"
            db = sqlite3.connect('Users_file.Data')
            cur = db.cursor()
            cur.execute(
                f"SELECT * FROM users WHERE nickname ='{txt_check_nickname.value}' AND password = '{txt_check_pasword.value}'")
            User.lich_kab_info(1)
            chek=txt_check_nickname.value
            print(chek)
            if cur.fetchone() != None:
                if txt_check_nickname.value == admin and txt_check_pasword.value == admin_pasword:
                    return 3
                else:
                    return 2
            else:
                return 0
            db.commit()
            db.close()

        def enter_user(self):
            admin.visible=False
            user.visible = False
            Glav_page.glav_page_us(e)
            page.update()

    class Admin:
        def enter_admin(self):
            user.visible = False
            admin.visible = False
            Glav_page.glav_page_adm(e)
            page.update()

    class Glav_page:

        global money1
        global money2

        def open_donat(self):
            med_money.visible=True
            feed_money.visible=True
            get_med_money.visible=True
            get_feed_gramm.visible=True
            page.update()

        def close_donat(self):
            med_money.visible = False
            feed_money.visible = False
            get_med_money.visible = False
            get_feed_gramm.visible = False
            page.update()

        def open_add_menu(self):
            pol_muz.visible=True
            pol_zen.visible=True
            new_dog_name.visible=True
            new_dog_age.visible=True
            new_dog_paroda.visible=True
            new_dog_opis.visible=True
            new_dog_foto.visible=True
            add_new_dog.visible=True
            page.update()

        def close_add_menu(self):
            pol_muz.visible = False
            pol_zen.visible = False
            new_dog_name.visible = False
            new_dog_age.visible = False
            new_dog_paroda.visible = False
            new_dog_opis.visible = False
            new_dog_foto.visible = False
            add_new_dog.visible = False
            page.update()

        def open_del_menu(self):
            del_dog.visible=True
            add_del_dog.visible=True
            page.update()

        def close_del_menu(self):
            del_dog.visible = False
            add_del_dog.visible = False
            page.update()

        def vozvrat_acc(self):
            if txt_check_nickname.value=="Ilay":
                Glav_page.del1(1)
                Glav_page.glav_page_adm(1)
                page.update()
            else:
                Glav_page.del1(1)
                Glav_page.glav_page_us(1)
                page.update()

        def close_acc(self):
            Glav_page.del1(1)
            Glav_page.home(1)

        def enter1(self): 
            User.registration_new_user(1)
            Glav_page.regist_window_close(1)
            regist_enter_text.visible=True
            enter3.visible=True
            page.update()

        def enter2(self):
            User.entry_user1(1)
            Glav_page.entry_window_close(1)
            if User.entry_user1(1)==3:
                Admin.enter_admin(1)
            elif User.entry_user1(1)==2:
                User.enter_user(1)

            page.update()

        def regist_window_close(self):
            regist_text.visible = False
            txt_nickname.visible = False
            txt_name.visible = False
            txt_second_name.visible = False
            txt_city.visible = False
            txt_age.visible = False
            txt_pasword.visible = False
            enter1.visible = False
            hom.visible = False
            # login.visible=True
            # regist.visible = True
            # close.visible = True
            page.update()

        def entry_window_close(self):
            entry_text.visible = False
            txt_check_nickname.visible = False
            txt_check_pasword.visible = False
            enter2.visible = False
            hom.visible = False

            page.update()

        def regist_window_open(self):
            regist_text.visible = True
            txt_nickname.visible=True
            txt_name.visible=True
            txt_second_name.visible=True
            txt_city.visible=True
            txt_age.visible=True
            txt_pasword.visible=True
            enter1.visible = True
            hom.visible = True
            page.update()

        def entry_window_open(self):
            entry_text.visible = True
            txt_check_nickname.visible = True
            txt_check_pasword.visible = True
            enter2.visible = True
            hom.visible = True
            page.update()

        def home(self):
            acc_info.visible=False
            backes.visible=False
            regist_enter_text.visible = False
            enter3.visible = False
            enter4.visible = False
            enter5.visible = False
            txt_nickname.value=""
            txt_name.value=""
            txt_second_name.value=""
            txt_city.value=""
            txt_age.value=""
            txt_pasword.value=""
            txt_check_nickname.value=""
            txt_check_pasword.value=""
            Glav_page.regist_window_close(1)
            Glav_page.entry_window_close(1)
            regist.visible = True
            login.visible = True
            close.visible = True
            page.update()

        def button_clicked_start_registration(self):
            regist.visible = False
            login.visible = False
            close.visible = False
            Glav_page.regist_window_open(1)
            page.update()

        def button_clicked_start_entry(self):
            regist.visible = False
            login.visible = False
            close.visible = False
            Glav_page.entry_window_open(1)
            page.update()

        def button_clicked_start_close(self):
            regist.visible = False
            login.visible = False
            close.visible = False
            page.update()
            sys.exit("Error: Выход из системы")

        def glav_page_ok_back(self):
            Glav_page.del1(1)
            admin.visible = False
            user.visible = False
            ok_button.visible = False
            Glav_page.glav_page_us(1)
            page.update()

        def ok(self):
            Glav_page.del1(1)
            admin.visible = False
            user.visible = False
            back.visible = False
            ok_button.visible = True
            page.update()

        def walk_ok(self):
            db = sqlite3.connect('Walk_Dogs.data')
            cur = db.cursor()
            sql_del = "DELETE FROM w_doges WHERE name = ?"
            cur.execute(sql_del, (walk_donation.value,))
            db.commit()
            db.close()

            raw = ""
            db = sqlite3.connect('Walk_Dogs.data')
            cur = db.cursor()
            cur.execute("SELECT name FROM w_doges")
            names = "Имя: "

            for row in cur.fetchall():
                raw = f"{raw + names + str(row[0])}\n"
                print(row[0])
            print(raw)
            w_spisok_sobak.value=raw
            db.close()

            db = sqlite3.connect('Walking_m_Dogs.data')
            cur = db.cursor()

            cur.execute(f"INSERT INTO w_m_doges VALUES('{walk_donation.value}','{chek}')")
            db.commit()
            db.close()

            raw = ""
            db = sqlite3.connect('Walking_m_Dogs.data')
            cur = db.cursor()
            cur.execute("SELECT name, owner FROM w_m_doges")
            names = "Имя: "
            owner = "Выгульшик: "

            for row in cur.fetchall():
                raw = f"{raw + names + str(row[0])+owner+str(row[1])}\n+"
                print(row[0])
            print(raw)
            w_m_spisok_sobak.value = raw
            db.close()


            Glav_page.ok(1)
            walk_ok_text.visible = True
            page.update()
            walk_donation.value=""
            page.update()

        def guardianship_ok(self):
            db = sqlite3.connect('Walk_Dogs.data')
            cur = db.cursor()
            db1 = sqlite3.connect('Guardianship_Dogs.data')
            cur1 = db1.cursor()
            sql_del = "DELETE FROM w_doges WHERE name = ?"
            cur.execute(sql_del, (guardianship_donation.value,))
            sql_del1 = "DELETE FROM g_doges WHERE name = ?"
            cur1.execute(sql_del1, (guardianship_donation.value,))
            db.commit()
            db.close()
            db1.commit()
            db1.close()

            raw = ""
            db = sqlite3.connect('Walk_Dogs.data')
            cur = db.cursor()
            cur.execute("SELECT name FROM w_doges")
            names = "Имя: "

            for row in cur.fetchall():
                raw = f"{raw + names + str(row[0])}\n"
                print(row[0])
            print(raw)
            w_spisok_sobak.value = raw
            db.close()

            raw = ""
            db = sqlite3.connect('Guardianship_Dogs.data')
            cur = db.cursor()
            cur.execute("SELECT name FROM g_doges")
            names = "Имя: "

            for row in cur.fetchall():
                raw = f"{raw + names + str(row[0])}\n"
                print(row[0])
            print(raw)
            g_spisok_sobak.value = raw
            db.close()

            Glav_page.ok(1)
            vozvrat_walk_ok_text.visible = True
            vozvrat_walk_name.value = ""
            page.update()

            Glav_page.ok(1)
            vozvrat_walk_ok_text.visible = True
            vozvrat_walk_name.value = ""
            page.update()


            Glav_page.ok(1)
            page.update()
            guardianship_ok_text.visible = True
            page.update()

            guardianship_donation.value=""
            page.update()

        def adopt_ok(self):
            db = sqlite3.connect('Dogs.data')
            cur = db.cursor()
            db1 = sqlite3.connect('Walk_Dogs.data')
            cur1 = db1.cursor()
            db2 = sqlite3.connect('Guardianship_Dogs.data')
            cur2 = db2.cursor()
            db3 = sqlite3.connect('Adopt_Dogs.data')
            cur3 = db3.cursor()
            sql_del = "DELETE FROM doges WHERE name = ?"
            cur.execute(sql_del, (adopt_donation.value,))
            sql_del1 = "DELETE FROM W_doges WHERE name = ?"
            cur1.execute(sql_del1, (adopt_donation.value,))
            sql_del2 = "DELETE FROM g_doges WHERE name = ?"
            cur2.execute(sql_del2, (adopt_donation.value,))
            sql_del3 = "DELETE FROM a_doges WHERE name = ?"
            cur3.execute(sql_del3, (adopt_donation.value,))
            db.commit()
            db.close()
            db1.commit()
            db1.close()
            db2.commit()
            db2.close()
            db3.commit()
            db3.close()

            raw = ""
            db = sqlite3.connect('Guardianship_Dogs.data')
            cur = db.cursor()
            cur.execute("SELECT name FROM g_doges")
            names = "Имя: "

            for row in cur.fetchall():
                raw = f"{raw + names + str(row[0])}\n"
                print(row[0])
            print(raw)
            g_spisok_sobak.value = raw
            db.close()
            page.update()

            raw = ""
            db = sqlite3.connect('Adopt_Dogs.data')
            cur = db.cursor()
            cur.execute("SELECT name FROM a_doges")
            names = "Имя: "

            for row in cur.fetchall():
                raw = f"{raw + names + str(row[0])}\n"
                print(row[0])
            print(raw)
            a_spisok_sobak.value = raw
            db.close()
            page.update()

            raw = ""
            db = sqlite3.connect('Walk_Dogs.data')
            cur = db.cursor()
            cur.execute("SELECT name FROM w_doges")
            names = "Имя: "

            for row in cur.fetchall():
                raw = f"{raw + names + str(row[0])}\n"
                print(row[0])
            print(raw)
            w_spisok_sobak.value = raw
            db.close()
            page.update()

            raw = ""
            db = sqlite3.connect('Dogs.data')
            cur = db.cursor()
            cur.execute("SELECT name,age, paroda, pol, pis ,foto FROM doges")
            names = "Имя: "
            parodes = "Порода: "
            ages = ", Возраст: "
            poles = "Пол: "
            opis = "Описание: "

            for row in cur.fetchall():
                raw = f"{raw + names + str(row[0]) + ages + str(row[1])}\n" + f"{parodes + str(row[2])}\n" + f"{poles + str(row[3])}\n" + f"{opis + str(row[4])}\n" + "\n"
                print(row[0], row[1])
            spisok_sobak.value = raw
            db.close()

            Glav_page.ok(1)
            adopt_ok_text.visible = True
            adopt_donation.value=""
            page.update()

        def vozvrat_walk_ok(self):
            db = sqlite3.connect('Walk_Dogs.data')
            cur = db.cursor()
            cur.execute(f"INSERT INTO w_doges VALUES('{str(vozvrat_walk_name.value)}')")
            db.commit()
            db.close()

            raw = ""
            db = sqlite3.connect('Walk_Dogs.data')
            cur = db.cursor()
            cur.execute("SELECT name FROM w_doges")
            names = "Имя: "

            for row in cur.fetchall():
                raw = f"{raw + names + str(row[0])}\n"
                print(row[0])
            print(raw)
            w_spisok_sobak.value = raw
            db.close()

            Glav_page.ok(1)
            vozvrat_walk_ok_text.visible = True
            vozvrat_walk_name.value=""
            page.update()

        def vozvrat_guardianship_ok(self):
            db = sqlite3.connect('Walk_Dogs.data')
            cur = db.cursor()
            db1 = sqlite3.connect('Guardianship_Dogs.data')
            cur1 = db1.cursor()
            db2 = sqlite3.connect('Adopt_Dogs.data')
            cur2 = db2.cursor()
            cur.execute(f"INSERT OR IGNORE INTO w_doges VALUES('{str(vozvrat_guardianship_name.value)}')")
            db.commit()
            cur1.execute(f"INSERT OR IGNORE INTO g_doges VALUES('{str(vozvrat_guardianship_name.value)}')")
            db1.commit()
            cur2.execute(f"INSERT OR IGNORE INTO a_doges VALUES('{str(vozvrat_guardianship_name.value)}')")
            db2.commit()
            Glav_page.ok(1)
            vozvrat_guardianship_ok_text.visible = True
            db.close()
            db1.close()
            db2.close()

            raw = ""
            db = sqlite3.connect('Adopt_Dogs.data')
            cur = db.cursor()
            cur.execute("SELECT name FROM a_doges")
            names = "Имя: "

            for row in cur.fetchall():
                raw = f"{raw + names + str(row[0])}\n"
                print(row[0])
            print(raw)
            a_spisok_sobak.value = raw
            db.close()

            page.update()

            raw = ""
            db = sqlite3.connect('Walk_Dogs.data')
            cur = db.cursor()
            cur.execute("SELECT name FROM w_doges")
            names = "Имя: "

            for row in cur.fetchall():
                raw = f"{raw + names + str(row[0])}\n"
                print(row[0])
            print(raw)
            w_spisok_sobak.value = raw
            db.close()
            page.update()

            raw = ""
            db = sqlite3.connect('Guardianship_Dogs.data')
            cur = db.cursor()
            cur.execute("SELECT name FROM g_doges")
            names = "Имя: "

            for row in cur.fetchall():
                raw = f"{raw + names + str(row[0])}\n"
                print(row[0])
            print(raw)
            g_spisok_sobak.value = raw
            db.close()
            vozvrat_guardianship_name.value = ""
            page.update()

        def add_vozvrat_name1(self):
            walk_vozvrat_button.visible = True
            vozvrat_walk_name.visible = True
            page.update()
        def del_vozvrat_name1(self):
            walk_vozvrat_button.visible = False
            vozvrat_walk_name.visible = False
            page.update()
        def add_vozvrat_name2(self):
            guardianship_vozvrat_button.visible = True
            vozvrat_guardianship_name.visible = True
            page.update()
        def del_vozvrat_name2(self):
            guardianship_vozvrat_button.visible = False
            vozvrat_guardianship_name.visible = False
            page.update()

        def add_dogs_vozvrat(self):
            vozvrat_walk.visible = True
            vozvrat_guardianship.visible = True
            page.update()
        def del_dogs_vozvrat(self):
            walk_vozvrat_button.visible = False
            vozvrat_walk_name.visible = False
            vozvrat_walk.visible = False
            vozvrat_guardianship.visible = False
            guardianship_vozvrat_button.visible = False
            vozvrat_guardianship_name.visible = False
            page.update()

        def add_dogs_list(self):
            list_dogs.visible = True
            spisok_sobak.visible = True
            page.update()
        def del_dog_list(self):
            list_dogs.visible = False
            spisok_sobak.visible = False
            page.update()

        def add_feed(self):
            feed_money.visible = True
            get_feed_gramm.visible = True
            feed_donation.visible = True
            feed_donation_button.visible = True
            page.update()
        def del_feed(self):
            feed_money.visible = False
            get_feed_gramm.visible = False
            feed_donation.visible=False
            feed_donation_button.visible = False
            feed_donation.value = ""
            page.update()

        def add_med(self):
            med_money.visible = True
            get_med_money.visible = True
            med_donation.visible = True
            med_donation_button.visible = True
            page.update()
        def del_med(self):
            med_money.visible = False
            get_med_money.visible = False
            med_donation.visible=False
            med_donation_button.visible = False
            med_donation.value=""
            page.update()

        def add_walk(self):
            w_spisok_sobak.visible = True
            walk_donation.visible = True
            walk_donation_button.visible = True
            page.update()
        def del_walk(self):
            w_spisok_sobak.visible = False
            walk_donation.visible=False
            walk_donation_button.visible = False
            walk_donation.value=""
            page.update()

        def add_guardianship(self):
            g_spisok_sobak.visible = True
            guardianship_donation.visible = True
            guardianship_donation_button.visible = True
            page.update()
        def del_guardianship(self):
            g_spisok_sobak.visible = False
            guardianship_donation.visible=False
            guardianship_donation_button.visible = False
            guardianship_donation.value = ""
            page.update()

        def add_adopt(self):
            a_spisok_sobak.visible = True
            adopt_donation.visible = True
            adopt_donation_button.visible = True
            page.update()
        def del_adopt(self):
            a_spisok_sobak.visible = False
            adopt_donation.visible=False
            adopt_donation_button.visible = False
            adopt_donation.value=""
            page.update()

        def glav_page_us(self):
            pb.visible = True
            vozvrat.visible = True
            dogs_list.visible = True
            back.visible = True
            walk.visible = True
            feed.visible = True
            medicines.visible = True
            guardianship.visible = True
            adopt.visible = True

        def glav_page_adm(self):
            pb.visible = True
            dogs_list.visible = True
            donations_value_but.visible = True
            add_new_dog_but.visible = True
            del_dog_but.visible = True
            back.visible = True
            page.update()

        def del1(self):
            pb.visible=False
            acc_info.visible = False
            backes.visible = False
            enter3.visible = False
            enter4.visible = False
            enter5.visible = False
            regist_enter_text.visible = False
            entry_text.visible = False
            regist_text.visible = False
            hom.visible = False
            enter1.visible = False
            enter2.visible = False
            txt_nickname.visible = False
            txt_name.visible = False
            txt_second_name.visible = False
            txt_city.visible = False
            txt_age.visible = False
            txt_pasword.visible = False
            txt_check_nickname.visible = False
            txt_check_pasword.visible = False
            pol_muz.visible = False
            pol_zen.visible = False
            walk_ok_text.visible = False
            guardianship_ok_text.visible = False
            adopt_ok_text.visible = False
            vozvrat_walk_ok_text.visible = False
            vozvrat_guardianship_ok_text.visible = False
            ok_button.visible = False
            walk_vozvrat_button.visible = False
            guardianship_vozvrat_button.visible = False
            vozvrat_guardianship_name.visible = False
            vozvrat_walk_name.visible = False
            vozvrat.visible = False
            vozvrat_walk.visible = False
            vozvrat_guardianship.visible = False
            w_spisok_sobak.visible = False
            a_spisok_sobak.visible = False
            g_spisok_sobak.visible = False
            spisok_sobak.visible = False
            new_dog_foto.visible = False
            med_money.visible=False
            feed_money.visible=False
            get_feed_gramm.visible=False
            get_med_money.visible=False
            list_dogs.visible=False
            dogs_list.visible=False
            walk_donation_button.visible=False
            adopt_donation_button.visible=False
            guardianship_donation_button.visible=False
            walk_donation.visible=False
            guardianship_donation.visible=False
            adopt_donation.visible=False
            feed_donation_button.visible=False
            med_donation_button.visible=False
            donations_value_but.visible=False
            add_new_dog_but.visible=False
            del_dog_but.visible=False
            feed_donation.visible=False
            med_donation.visible=False
            new_dog_age.visible=False
            new_dog_paroda.visible=False
            new_dog_opis.visible=False
            new_dog_name.visible=False
            add_new_dog.visible=False
            del_dog.visible=False
            add_del_dog.visible=False
            back.visible = False
            walk.visible=False
            feed.visible=False
            medicines.visible=False
            guardianship.visible=False
            adopt.visible=False
            page.update()

        def back(self):
            txt_nickname.value=""
            txt_name.value=""
            txt_second_name.value=""
            txt_city.value=""
            txt_age.value=""
            txt_pasword.value=""
            txt_check_nickname.value=""
            txt_check_pasword.value=""
            new_dog_name.value=""
            del_dog.value = ""
            new_dog_age.value = ""
            new_dog_paroda.value = ""
            new_dog_opis.value = ""
            pol_muz.value=False
            pol_zen.value = False
            Glav_page.del1(e)
            admin.visible = True
            user.visible = True
            back.visible=False
            login.visible=True
            regist.visible=True
            close.visible=True
            page.update()

        def obnov_donatov(self):
            global i
            i = 2
            with open("file1.txt") as f:
                lines = f.readlines()
            for row in lines:
                rew1=int(row)
            get_feed_gramm.value = f"{rew1} руб."
            page.update()

            with open("file2.txt") as f:
                lines = f.readlines()
            for row in lines:
                rew=int(row)
            get_med_money.value = f"{rew} руб."
            page.update()

        def donation_feed(self):
            global money1
            with open("file1.txt") as f:
                lines = f.readlines()
            for row in lines:
                money1 = int(row)

            if float(feed_donation.value)>=0:
                val=int(money1 + int(feed_donation.value))
                with open("file1.txt", "a") as file:
                    file.write(str(val) + "\n")
                with open("file1.txt") as f:
                    lines = f.readlines()
                for row in lines:
                    rew = int(row)
                money1=rew
                feed_donation.value=""
                get_feed_gramm.value=f"{money1} руб."
                page.update()

            else:
                feed_donation.value = ""
                page.update()

        def donation_med(self):
            global money2
            with open("file2.txt") as f:
                lines = f.readlines()
            for row in lines:
                money2 = int(row)

            if float(med_donation.value) >= 0:
                val = money2 + int(med_donation.value)
                with open("file2.txt", "a") as file:
                    file.write(str(val) + "\n")
                with open("file2.txt") as f:
                    lines = f.readlines()
                for row in lines:
                    rew1 = int(row)
                money2 = rew1
                med_donation.value = ""
                get_med_money.value = f"{money2} руб."
                page.update()

            else:
                med_donation.value = ""
                page.update()
        def donation_walk(self):
            walk_donation.value=""
            page.update()
        def donation_guardianship(self):
            guardianship_donation.value=""
            page.update()
        def donation_adopt(self):
            adopt_donation.value=""
            page.update()
    class Dog:
        def vozvrat_dog_walk(self):
            Glav_page.vozvrat_walk_ok(1)
            vozvrat_walk_name.value=""
            page.update()

        def vozvrat_dog_guardianship(self):
            Glav_page.vozvrat_guardianship_ok(1)
            vozvrat_guardianship_name.value = ""
            page.update()

        def add_dog_to_table(self):
            dog_pol=""
            if pol_muz.value==True:
                print(1)
                dog_pol="Мужской"
            elif pol_zen.value==True:
                print(2)
                dog_pol="Женский"
            elif pol_zen.value==True and pol_muz.value==True:
                print(00)
                return None
            else:
                print(0)
                pass

            db1 = sqlite3.connect('Walk_Dogs.data')
            cur1 = db1.cursor()
            db2 = sqlite3.connect('Adopt_Dogs.data')
            cur2 = db2.cursor()
            db3 = sqlite3.connect('Guardianship_Dogs.data')
            cur3 = db3.cursor()
            db = sqlite3.connect('Dogs.data')
            cur = db.cursor()
            cur.execute("""CREATE TABLE IF NOT EXISTS doges (
                name TEXT PRIMARY KEY,
                age INTEGER,
                paroda TEXT,
                pol TEXT,
                pis TEXT,
                foto TEXT
            )""")
            db = sqlite3.connect('Dogs.data')
            cur = db.cursor()
            cur.execute(f"INSERT INTO doges VALUES('{new_dog_name.value}', '{int(new_dog_age.value)}', '{new_dog_paroda.value}',"
                        f" '{dog_pol}', '{new_dog_opis.value}', '{new_dog_foto.value}')")
            cur1.execute(f"INSERT OR IGNORE INTO w_doges VALUES('{new_dog_name.value}')")
            cur2.execute(f"INSERT OR IGNORE INTO a_doges VALUES('{new_dog_name.value}')")
            cur3.execute(f"INSERT OR IGNORE INTO g_doges VALUES('{new_dog_name.value}')")
            db1.commit()
            db2.commit()
            db3.commit()
            db.commit()
            db = sqlite3.connect('Dogs.Data')
            cur = db.cursor()
            cur.execute(f"SELECT * FROM doges WHERE name ='{new_dog_name.value}' AND age = '{int(new_dog_age.value)}' "
                        f"AND paroda = '{new_dog_paroda.value}' AND pol = '{dog_pol}' "
                        f"AND pis = '{new_dog_opis.value}' AND foto = '{new_dog_foto.value}'")
            print(cur.fetchone())
            db.close()
            db1.close()
            db2.close()
            db3.close()

            raw = ""
            rew = ""
            db = sqlite3.connect('Dogs.data')
            cur = db.cursor()
            cur.execute("SELECT name,age, paroda, pol, pis ,foto FROM doges")

            names = "Имя: "
            parodes = "Порода: "
            ages = ", Возраст: "
            poles = "Пол: "
            opis = "Описание: "

            for row in cur.fetchall():
                raw = f"{raw + names + str(row[0]) + ages + str(row[1])}\n" + f"{parodes + str(row[2])}\n" + f"{poles + str(row[3])}\n" + f"{opis + str(row[4])}\n" + "\n"
                rew = f"{rew + str(row[5])}\n"
                print(row[0], row[1])
            spisok_sobak.value=raw
            db.close()

            raw = ""
            db = sqlite3.connect('Walk_Dogs.data')
            cur = db.cursor()
            cur.execute("SELECT name FROM w_doges")
            names = "Имя: "

            for row in cur.fetchall():
                raw = f"{raw + names + str(row[0])}\n"
                print(row[0])
            print(raw)
            w_spisok_sobak.value = raw
            db.close()
            page.update()

            raw = ""
            db = sqlite3.connect('Adopt_Dogs.data')
            cur = db.cursor()
            cur.execute("SELECT name FROM a_doges")
            names = "Имя: "

            for row in cur.fetchall():
                raw = f"{raw + names + str(row[0])}\n"
                print(row[0])
            print(raw)
            a_spisok_sobak.value = raw
            db.close()
            page.update()

            raw = ""
            db = sqlite3.connect('Guardianship_Dogs.data')
            cur = db.cursor()
            cur.execute("SELECT name FROM g_doges")
            names = "Имя: "

            for row in cur.fetchall():
                raw = f"{raw + names + str(row[0])}\n"
                print(row[0])
            print(raw)
            g_spisok_sobak.value = raw
            db.close()
            page.update()

            new_dog_name.value = ""
            del_dog.value = ""
            new_dog_age.value = ""
            new_dog_paroda.value = ""
            new_dog_opis.value = ""
            new_dog_foto.value = ""
            pol_muz.value=False
            pol_zen.value = False
        def add_dog(self):
            Dog.add_dog_to_table(1)
            page.update()

        def del_dog_from_table(self):
            db = sqlite3.connect('Dogs.data')
            cur = db.cursor()
            sql_del="DELETE FROM doges WHERE name = ?"
            cur.execute(sql_del, (del_dog.value, ))
            db.commit()
            db.close()

            db = sqlite3.connect('Dogs.data')
            cur = db.cursor()
            db1 = sqlite3.connect('Walk_Dogs.data')
            cur1 = db1.cursor()
            db2 = sqlite3.connect('Guardianship_Dogs.data')
            cur2 = db2.cursor()
            db3 = sqlite3.connect('Adopt_Dogs.data')
            cur3 = db3.cursor()
            sql_del = "DELETE FROM doges WHERE name = ?"
            cur.execute(sql_del, (del_dog.value,))
            sql_del1 = "DELETE FROM W_doges WHERE name = ?"
            cur1.execute(sql_del1, (del_dog.value,))
            sql_del2 = "DELETE FROM g_doges WHERE name = ?"
            cur2.execute(sql_del2, (del_dog.value,))
            sql_del3 = "DELETE FROM a_doges WHERE name = ?"
            cur3.execute(sql_del3, (del_dog.value,))
            db.commit()
            db.close()
            db1.commit()
            db1.close()
            db2.commit()
            db2.close()
            db3.commit()
            db3.close()

            raw = ""
            rew = ""
            db = sqlite3.connect('Dogs.data')
            cur = db.cursor()
            cur.execute("SELECT name,age, paroda, pol, pis ,foto FROM doges")

            names = "Имя: "
            parodes = "Порода: "
            ages = ", Возраст: "
            poles = "Пол: "
            opis = "Описание: "

            for row in cur.fetchall():
                raw = f"{raw + names + str(row[0]) + ages + str(row[1])}\n" + f"{parodes + str(row[2])}\n" + f"{poles + str(row[3])}\n" + f"{opis + str(row[4])}\n" + "\n"
                rew = f"{rew + str(row[5])}\n"
                print(row[0], row[1])
            spisok_sobak.value = raw
            page.update()
            db.close()

            raw = ""
            db = sqlite3.connect('Adopt_Dogs.data')
            cur = db.cursor()
            cur.execute("SELECT name FROM a_doges")
            names = "Имя: "

            for row in cur.fetchall():
                raw = f"{raw + names + str(row[0])}\n"
                print(row[0])
            print(raw)
            a_spisok_sobak.value = raw
            db.close()

            page.update()

            raw = ""
            db = sqlite3.connect('Walk_Dogs.data')
            cur = db.cursor()
            cur.execute("SELECT name FROM w_doges")
            names = "Имя: "

            for row in cur.fetchall():
                raw = f"{raw + names + str(row[0])}\n"
                print(row[0])
            print(raw)
            w_spisok_sobak.value = raw
            db.close()
            page.update()

            raw = ""
            db = sqlite3.connect('Guardianship_Dogs.data')
            cur = db.cursor()
            cur.execute("SELECT name FROM g_doges")
            names = "Имя: "

            for row in cur.fetchall():
                raw = f"{raw + names + str(row[0])}\n"
                print(row[0])
            print(raw)
            g_spisok_sobak.value = raw
            db.close()
            vozvrat_guardianship_name.value = ""
            page.update()

        def del_dog(self):
            Dog.del_dog_from_table(1)
            new_dog_name.value = ""
            del_dog.value = ""
            new_dog_age.value = ""
            new_dog_paroda.value = ""
            new_dog_opis.value = ""
            page.update()
            pass
        def creat_dogs_list(self):
            raw=""
            rew=""
            db = sqlite3.connect('Dogs.data')
            cur = db.cursor()
            cur.execute("SELECT name,age, paroda, pol, pis ,foto FROM doges")

            names = "Имя: "
            parodes = "Порода: "
            ages=", Возраст: "
            poles="Пол: "
            opis="Описание: "

            for row in cur.fetchall():
                raw = f"{raw+names+str(row[0])+ages+str(row[1])}\n"+f"{parodes+str(row[2])}\n"+f"{poles+str(row[3])}\n"+f"{opis+str(row[4])}\n"+"\n"
                rew = f"{rew+str(row[5])}\n"
                print(row[0], row[1])
            print(raw)
            print(rew)
            global spisok_sobak
            global foto_sobak
            spisok_sobak=ft.Text(value=f"{raw}", size=20, color="blue600")
            page.add(ft.Row([spisok_sobak]))
            db.close()

        def creat_w_dogs_list(self):
            global raw
            raw=""
            db = sqlite3.connect('Walk_Dogs.data')
            cur = db.cursor()
            cur.execute("SELECT name FROM w_doges")
            names = "Имя: "

            for row in cur.fetchall():
                raw = f"{raw+names+str(row[0])}\n"
                print(row[0])
            print(raw)
            global w_spisok_sobak
            w_spisok_sobak=ft.Text(value=f"{raw}", size=20, color="blue600")
            page.add(w_spisok_sobak)
            db.close()

        def creat_a_dogs_list(self):
            raw=""
            db = sqlite3.connect('Adopt_Dogs.data')
            cur = db.cursor()
            cur.execute("SELECT name FROM a_doges")
            names = "Имя: "
            for row in cur.fetchall():
                raw = f"{raw+names+str(row[0])}\n"
                print(row[0])
            print(raw)
            global a_spisok_sobak
            a_spisok_sobak=ft.Text(value=f"{raw}", size=20, color="blue600")
            page.add(a_spisok_sobak)
            db.close()

        def creat_g_dogs_list(self):
            raw=""
            db = sqlite3.connect('Guardianship_Dogs.data')
            cur = db.cursor()
            cur.execute("SELECT name FROM g_doges")
            names = "Имя: "

            for row in cur.fetchall():
                raw = f"{raw+names+str(row[0])}\n"
                print(row[0])
            print(raw)
            global g_spisok_sobak
            g_spisok_sobak=ft.Text(value=f"{raw}", size=20, color="blue600")
            page.add(g_spisok_sobak)
            db.close()

       #================================
        def creat_w_m_dogs_list(self):
            raw=""
            db = sqlite3.connect('Walking_m_Dogs.data')
            cur = db.cursor()
            cur.execute("SELECT name, owner FROM w_m_doges")
            names = "Имя: "
            owner = "Выгульшик: "

            for row in cur.fetchall():
                raw = f"{raw+names+str(row[0])+owner+str(row[1])}\n"
                print(row[0])
            print(raw)
            global w_m_spisok_sobak
            w_m_spisok_sobak=ft.Text(value=f"{raw}", size=20, color="blue600")
            page.add(w_m_spisok_sobak)
            db.close()

        def creat_g_m_dogs_list(self):
            raw=""
            db = sqlite3.connect('Guardianshiping_m_Dogs.data')
            cur = db.cursor()
            cur.execute("SELECT name, owner FROM g_m_doges")
            names = "Имя: "
            owner ="Опекун: "

            for row in cur.fetchall():
                raw = f"{raw+names+str(row[0])+owner+str(row[1])}\n"
                print(row[0])
            print(raw)
            global g_m_spisok_sobak
            g_m_spisok_sobak=ft.Text(value=f"{raw}", size=20, color="blue600")
            page.add(g_m_spisok_sobak)
            db.close()

        def creat_a_m_dogs_list(self):
            raw=""
            db = sqlite3.connect('Adopting_m_Dogs.data')
            cur = db.cursor()
            cur.execute("SELECT name, owner FROM a_m_doges")
            names = "Имя: "
            owner = "Усыновитель: "

            for row in cur.fetchall():
                raw = f"{raw+names+str(row[0])+owner+str(row[1])}\n"
                print(row[0])
            print(raw)
            global a_m_spisok_sobak
            a_m_spisok_sobak=ft.Text(value=f"{raw}", size=20, color="blue600")
            page.add(a_m_spisok_sobak)
            db.close()

    feed_donation = ft.TextField(value="", hint_text="Сколько вы хотите пожертвовать?", width=300)
    med_donation = ft.TextField(value="", hint_text="Сколько вы хотите пожертвовать?", width=300)
    walk_donation = ft.TextField(value="", hint_text="Кого вы хотите выгулить?", width=300)
    guardianship_donation = ft.TextField(value="", hint_text="Кого вы хотите опекать?", width=300)
    adopt_donation = ft.TextField(value="", hint_text="Кого вы хотите усыновить?", width=300)
    vozvrat_walk_name=ft.TextField(value="", hint_text="Кого вы возвращаете (Имя)?", width=300)
    vozvrat_guardianship_name = ft.TextField(value="", hint_text="Кого вы возвращаете (Имя)?", width=300)

    ok_button = ft.ElevatedButton(text="Окей", width=300, height=50,bgcolor="green450",color="black", on_click=Glav_page.glav_page_ok_back)

    feed_donation_button = ft.ElevatedButton(text="Пожертвовать", width=300, height=50,bgcolor="green450",color="black", on_click=Glav_page.donation_feed)
    med_donation_button = ft.ElevatedButton(text="Пожертвовать", width=300, height=50,bgcolor="green450",color="black", on_click=Glav_page.donation_med)
    walk_donation_button = ft.ElevatedButton(text="Подать заявку на прогулку", width=300, height=50, bgcolor="green450",color="black", on_click=Glav_page.walk_ok)
    adopt_donation_button = ft.ElevatedButton(text="Подать заявку на усыновление", width=300, height=50, bgcolor="green450",color="black", on_click=Glav_page.adopt_ok)
    guardianship_donation_button = ft.ElevatedButton(text="Подать заявку на опекунство", width=300, height=50, bgcolor="green450",color="black", on_click=Glav_page.guardianship_ok)
    walk_vozvrat_button = ft.ElevatedButton(text="Подать заявку на возврат собаки", width=300, height=50, bgcolor="green450", color="black", on_click=Dog.vozvrat_dog_walk)
    guardianship_vozvrat_button = ft.ElevatedButton(text="Подать заявку на возврат собаки", width=300, height=50,bgcolor="green450", color="black", on_click=Dog.vozvrat_dog_guardianship)

    new_dog_name = ft.TextField(value="", hint_text="Имя собаки", width=300)
    new_dog_age = ft.TextField(value="", hint_text="Возраст собаки", width=300)
    new_dog_paroda = ft.TextField(value="", hint_text="Порода собаки", width=300)
    new_dog_opis = ft.TextField(value="", hint_text="Краткое описание", width=300)
    new_dog_foto = ft.TextField(value="", hint_text="Фотография (URL ссылка)", width=300)
    add_new_dog = ft.ElevatedButton(text="Добавить новую собаку в список", width=300, height=50, on_click=Dog.add_dog)
    del_dog = ft.TextField(value="", hint_text="Имя собаки", width=300)
    add_del_dog = ft.ElevatedButton(text="Удалить собаку из списка", width=300, height=50, on_click=Dog.del_dog)

    walk_ok_text = ft.Text(value=f'Вы подали заявку на прогулку  {walk_donation.value}', size=25, color="blue600")
    guardianship_ok_text = ft.Text(value=f'Вы подали заявку на опекунство {guardianship_donation.value}', size=25, color="blue600")
    adopt_ok_text = ft.Text(value=f'Вы подали заявку на усыновление {adopt_donation.value}', size=25, color="blue600")
    vozvrat_walk_ok_text = ft.Text(value=f'Вы подали заявку на возврат {vozvrat_walk_name.value} после прогулки', size=25, color="blue600")
    vozvrat_guardianship_ok_text = ft.Text(value=f'Вы подали заявку на возврат {vozvrat_guardianship_name.value} после опекунства', size=25, color="blue600")

    name_of_the_shelter = ft.Text(value='Приют "Добрые руки" ', size=30, color="blue600", weight=ft.FontWeight.W_500)
    list_dogs = ft.Text(value='Собаки:', size=25, color="blue600")
    med_money = ft.Text(value='Пожертвовано на медицину:', size=25, color="blue600")
    feed_money = ft.Text(value='Пожертвовано на корм:', size=25, color="blue600")

    get_med_money = ft.Text(value=f"{money2} руб.", size=25, color="blue600")
    get_feed_gramm = ft.Text(value=f"{money1} руб.", size=25, color="blue600")

    admin = ft.ElevatedButton(text="Вход с правами админа", width=300, height=50, on_click=Admin.enter_admin)
    user = ft.ElevatedButton(text="Вход с правами пользователя", width=300, height=50, on_click=User.enter_user)

    vozvrat = ft.ElevatedButton(text="Возврат собаки", width=300, height=50, on_click=Glav_page.add_dogs_vozvrat,on_long_press=Glav_page.del_dogs_vozvrat)
    vozvrat_walk = ft.ElevatedButton(text="Возврат собаки с прогулки", width=300, height=50, on_click=Glav_page.add_vozvrat_name1, on_long_press=Glav_page.del_vozvrat_name1)
    vozvrat_guardianship = ft.ElevatedButton(text="Возврат собаки с опекунства", width=300, height=50, on_click=Glav_page.add_vozvrat_name2,on_long_press=Glav_page.del_vozvrat_name2)
    back = ft.ElevatedButton(text="Обратно", width=300, height=50, on_click=Glav_page.back)
    dogs_list = ft.ElevatedButton(text="Список всех собак", width=300, height=50, on_click=Glav_page.add_dogs_list, on_long_press=Glav_page.del_dog_list)
    walk = ft.ElevatedButton(text="Погулять с собакой", width=300, height=50,on_click=Glav_page.add_walk, on_long_press=Glav_page.del_walk)
    feed = ft.ElevatedButton(text="Пожертвовать корм", width=300, height=50, on_click=Glav_page.add_feed, on_long_press=Glav_page.del_feed)
    medicines = ft.ElevatedButton(text="Пожертвовать лекарства", width=300, height=50, on_click=Glav_page.add_med, on_long_press=Glav_page.del_med)
    guardianship = ft.ElevatedButton(text="Стать опекуном подопечного", width=300, height=50, on_click=Glav_page.add_guardianship, on_long_press=Glav_page.del_guardianship)
    adopt = ft.ElevatedButton(text="Усыновить подопечного", width=300, height=50, on_click=Glav_page.add_adopt, on_long_press=Glav_page.del_adopt)

    pol_muz=ft.Checkbox(label="Мужской пол", active_color="blue400",width=300, height=30,label_style=ft.TextStyle(color="blue600",size=24))
    pol_zen=ft.Checkbox(label="Женский пол", active_color="pink400", width=300, height=30,label_style=ft.TextStyle(color="pink600",size=24))

    txt_nickname = ft.TextField(value="", hint_text="Никнейм",  width=300, height=50)
    txt_name = ft.TextField(value="", hint_text="Имя", width=300, height=50)
    txt_second_name = ft.TextField(value="", hint_text="Фамилия", width=300, height=50)
    txt_city = ft.TextField(value="", hint_text="Город", width=300, height=50)
    txt_age = ft.TextField(value="", hint_text="Возраст", width=300, height=50)
    txt_pasword = ft.TextField(value="", hint_text="Пароль", width=300, height=50)
    txt_check_nickname = ft.TextField(value="", hint_text="Никнейм", width=300, height=50)
    txt_check_pasword = ft.TextField(value="", hint_text="Пароль", width=300, height=50)

    regist = ft.ElevatedButton(text="Регистрация", width=300, height=40,on_click=Glav_page.button_clicked_start_registration)
    login = ft.ElevatedButton(text="Вход", width=300, height=40, on_click=Glav_page.button_clicked_start_entry)
    close = ft.ElevatedButton(text="Закрыть", width=300, height=40, color="white", bgcolor="red360",on_click=Glav_page.button_clicked_start_close)

    hom = ft.ElevatedButton(text="Назад", width=300, height=50, on_click=Glav_page.home)
    enter3 = ft.ElevatedButton(text="ОК", width=300, height=50, on_click=Glav_page.home)

    enter1 = ft.ElevatedButton(text= "Зарегистрироваться", width=300, height=50, on_click=Glav_page.enter1)
    enter2 = ft.ElevatedButton(text="Войти", width=300, height=50, on_click=Glav_page.enter2)
    enter4 = ft.ElevatedButton(text="ОК", width=300, height=50,)
    enter5 = ft.ElevatedButton(text="ОК", width=300, height=50,)
    backes=ft.ElevatedButton(text="Назад",width=300, height=50, on_click=Glav_page.vozvrat_acc)

    regist_text = ft.Text(value='Регистрация', size=25, color="blue600")
    entry_text = ft.Text(value='Вход', size=25, color="blue600")
    regist_enter_text = ft.Text(value="Вы зарегистрировались", size=25, color="blue600")

    acc_info = ft.Text(value=rew, size=25, color="blue600")
    acc_icon=ft.Icon(name=ft.icons.ACCOUNT_CIRCLE_OUTLINED,color="blue300",size=45,tooltip="Аккаунт",)

    pb = ft.PopupMenuButton(items=[
            ft.PopupMenuItem(icon=ft.icons.ACCOUNT_CIRCLE_OUTLINED, text="Аккаунт"),
            ft.PopupMenuItem(),
            ft.PopupMenuItem(icon=ft.icons.ACCOUNT_BALANCE_OUTLINED, text="Личный кабинет", on_click=User.lich_kab_open),
            ft.PopupMenuItem(content=ft.Row([ft.Icon(ft.icons.NO_ACCOUNTS_OUTLINED),ft.Text("Выход из аккаунта")]),on_click=Glav_page.close_acc),])

    donations_value_but = ft.ElevatedButton(text="Пожертвования", width=300, height=50, on_click=Glav_page.open_donat,on_long_press=Glav_page.close_donat)
    add_new_dog_but=ft.ElevatedButton(text="Добавление новвой собаки", width=300, height=50, on_click=Glav_page.open_add_menu,on_long_press=Glav_page.close_add_menu)
    del_dog_but = ft.ElevatedButton(text="Удаление собаки", width=300, height=50, on_click=Glav_page.open_del_menu,on_long_press=Glav_page.close_del_menu)



    Glav_page.obnov_donatov(1)



    page.add(ft.Row([name_of_the_shelter,acc_icon,pb]))
    page.add(ft.Column([regist_enter_text,
                        acc_info,
                        backes,
                        enter3,enter4,enter5,
                        regist_text,
                        regist,login,close,
                        txt_nickname,txt_name,
                        txt_second_name,txt_city,
                        txt_age,txt_pasword,
                        enter1,
                        entry_text,
                        txt_check_nickname,txt_check_pasword,
                        enter2, hom,
                        #user, admin,
                        dogs_list, list_dogs]))
    Dog.creat_dogs_list(1)
    page.add(ft.Column([walk, walk_donation]))
    Dog.creat_w_dogs_list(1)
    page.add(ft.Column([walk_donation_button,
                        donations_value_but,
                        feed, feed_money, get_feed_gramm, feed_donation, feed_donation_button,
                        medicines, med_money, get_med_money, med_donation, med_donation_button,
                        guardianship,guardianship_donation]))
    Dog.creat_g_dogs_list(1)
    page.add(ft.Column([guardianship_donation_button,
                        adopt, adopt_donation]))
    Dog.creat_a_dogs_list(1)
    page.add(ft.Column([adopt_donation_button,
                        add_new_dog_but, new_dog_name,new_dog_age,new_dog_paroda,
                        pol_muz, pol_zen, new_dog_opis,new_dog_foto,
                        add_new_dog, del_dog_but, del_dog, add_del_dog]))
    Dog.creat_w_m_dogs_list(1)
    Dog.creat_g_m_dogs_list(1)
    Dog.creat_a_m_dogs_list(1)
    page.add(ft.Column([vozvrat, vozvrat_walk,vozvrat_walk_name, walk_vozvrat_button,
                        vozvrat_guardianship,vozvrat_guardianship_name,guardianship_vozvrat_button,
                        back, walk_ok_text, guardianship_ok_text, adopt_ok_text,vozvrat_walk_ok_text,vozvrat_guardianship_ok_text,ok_button]))
    Glav_page.del1(e)

ft.app(target=main)
